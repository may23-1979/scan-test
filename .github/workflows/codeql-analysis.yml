name: "Code Scanning (CodeQL + Semgrep)"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '0 0 * * 0'      # 毎週日曜

permissions:
  actions:  read          # private repo の場合に必要
  contents: read
  security-events: write # SARIF アップロード権限

###############################################################################
# 1) CodeQL ─ GitHub Actions (YAML) を解析
###############################################################################
jobs:
  codeql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        language: [ "actions" ]        # 必要なら "javascript-typescript" を追加
    steps:
      - uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

###############################################################################
# 2) Semgrep ─ PHP / JS / TS を解析（Composer 不要）
###############################################################################
  semgrep:
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep          # ← “returntocorp/semgrep” でも可
    steps:
      - uses: actions/checkout@v3

      # ── Semgrep を実行して SARIF を出力


      # --- Semgrep 実行（PHP / JS / TS）----------------------------
      - name: Run Semgrep (PHP + JS/TS)
        id: semgrep
        run: |
          semgrep ci \
            --config=p/owasp-top-ten \          # 既存 JS/TS 用
            --config=p/phpcs-security-audit \   # ★ PHP セキュリティ専用
            --config=p/security-audit \         # ★ 汎用セキュリティ
            --sarif --output=semgrep.sarif \
            || true                             # 脆弱性で exit≠0 → 以降継続

      # ── SARIF を GitHub Code Scanning へアップロード
      - name: Upload Semgrep SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif

